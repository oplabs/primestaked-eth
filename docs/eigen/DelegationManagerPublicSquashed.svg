<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 5.0.0 (20220707.1540)
 -->
<!-- Title: UmlClassDiagram Pages: 1 -->
<svg width="1289pt" height="1259pt"
 viewBox="0.00 0.00 1289.25 1259.40" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1255.4)">
<title>UmlClassDiagram</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-1255.4 1285.25,-1255.4 1285.25,4 -4,4"/>
<!-- 0 -->
<g id="node1" class="node">
<title>0</title>
<polygon fill="#f2f2f2" stroke="black" points="0,-0.5 0,-1250.9 1281.25,-1250.9 1281.25,-0.5 0,-0.5"/>
<text text-anchor="middle" x="640.62" y="-1234.3" font-family="Times,serif" font-size="14.00">DelegationManager</text>
<text text-anchor="middle" x="640.62" y="-1217.5" font-family="Times,serif" font-size="14.00">src/contracts/core/DelegationManager.sol</text>
<polyline fill="none" stroke="black" points="0,-1209.3 1281.25,-1209.3 "/>
<text text-anchor="start" x="8" y="-1192.7" font-family="Times,serif" font-size="14.00">Public:</text>
<text text-anchor="start" x="8" y="-1175.9" font-family="Times,serif" font-size="14.00"> &#160;&#160;pauserRegistry: IPauserRegistry &lt;&lt;Pausable&gt;&gt;</text>
<text text-anchor="start" x="8" y="-1159.1" font-family="Times,serif" font-size="14.00"> &#160;&#160;DOMAIN_TYPEHASH: bytes32 &lt;&lt;DelegationManagerStorage&gt;&gt;</text>
<text text-anchor="start" x="8" y="-1142.3" font-family="Times,serif" font-size="14.00"> &#160;&#160;STAKER_DELEGATION_TYPEHASH: bytes32 &lt;&lt;DelegationManagerStorage&gt;&gt;</text>
<text text-anchor="start" x="8" y="-1125.5" font-family="Times,serif" font-size="14.00"> &#160;&#160;DELEGATION_APPROVAL_TYPEHASH: bytes32 &lt;&lt;DelegationManagerStorage&gt;&gt;</text>
<text text-anchor="start" x="8" y="-1108.7" font-family="Times,serif" font-size="14.00"> &#160;&#160;strategyManager: IStrategyManager &lt;&lt;DelegationManagerStorage&gt;&gt;</text>
<text text-anchor="start" x="8" y="-1091.9" font-family="Times,serif" font-size="14.00"> &#160;&#160;slasher: ISlasher &lt;&lt;DelegationManagerStorage&gt;&gt;</text>
<text text-anchor="start" x="8" y="-1075.1" font-family="Times,serif" font-size="14.00"> &#160;&#160;eigenPodManager: IEigenPodManager &lt;&lt;DelegationManagerStorage&gt;&gt;</text>
<text text-anchor="start" x="8" y="-1058.3" font-family="Times,serif" font-size="14.00"> &#160;&#160;MAX_WITHDRAWAL_DELAY_BLOCKS: uint256 &lt;&lt;DelegationManagerStorage&gt;&gt;</text>
<text text-anchor="start" x="8" y="-1041.5" font-family="Times,serif" font-size="14.00"> &#160;&#160;operatorShares: mapping(address=&gt;mapping(IStrategy=&gt;uint256)) &lt;&lt;DelegationManagerStorage&gt;&gt;</text>
<text text-anchor="start" x="8" y="-1024.7" font-family="Times,serif" font-size="14.00"> &#160;&#160;delegatedTo: mapping(address=&gt;address) &lt;&lt;DelegationManagerStorage&gt;&gt;</text>
<text text-anchor="start" x="8" y="-1007.9" font-family="Times,serif" font-size="14.00"> &#160;&#160;stakerNonce: mapping(address=&gt;uint256) &lt;&lt;DelegationManagerStorage&gt;&gt;</text>
<text text-anchor="start" x="8" y="-991.1" font-family="Times,serif" font-size="14.00"> &#160;&#160;delegationApproverSaltIsSpent: mapping(address=&gt;mapping(bytes32=&gt;bool)) &lt;&lt;DelegationManagerStorage&gt;&gt;</text>
<text text-anchor="start" x="8" y="-974.3" font-family="Times,serif" font-size="14.00"> &#160;&#160;minWithdrawalDelayBlocks: uint256 &lt;&lt;DelegationManagerStorage&gt;&gt;</text>
<text text-anchor="start" x="8" y="-957.5" font-family="Times,serif" font-size="14.00"> &#160;&#160;pendingWithdrawals: mapping(bytes32=&gt;bool) &lt;&lt;DelegationManagerStorage&gt;&gt;</text>
<text text-anchor="start" x="8" y="-940.7" font-family="Times,serif" font-size="14.00"> &#160;&#160;cumulativeWithdrawalsQueued: mapping(address=&gt;uint256) &lt;&lt;DelegationManagerStorage&gt;&gt;</text>
<text text-anchor="start" x="8" y="-923.9" font-family="Times,serif" font-size="14.00"> &#160;&#160;strategyWithdrawalDelayBlocks: mapping(IStrategy=&gt;uint256) &lt;&lt;DelegationManagerStorage&gt;&gt;</text>
<text text-anchor="start" x="8" y="-907.1" font-family="Times,serif" font-size="14.00"> &#160;&#160;MAX_STAKER_OPT_OUT_WINDOW_BLOCKS: uint256 &lt;&lt;DelegationManager&gt;&gt;</text>
<text text-anchor="start" x="8" y="-890.3" font-family="Times,serif" font-size="14.00"> &#160;&#160;beaconChainETHStrategy: IStrategy &lt;&lt;DelegationManager&gt;&gt;</text>
<polyline fill="none" stroke="black" points="0,-882.1 1281.25,-882.1 "/>
<text text-anchor="start" x="8" y="-865.5" font-family="Times,serif" font-size="14.00">External:</text>
<text text-anchor="start" x="8" y="-848.7" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;&#160;pauserRegistry(): IPauserRegistry &lt;&lt;IPausable&gt;&gt;</text>
<text text-anchor="start" x="8" y="-831.9" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;&#160;delegatedTo(staker: address): address &lt;&lt;IDelegationManager&gt;&gt;</text>
<text text-anchor="start" x="8" y="-815.1" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;&#160;operatorShares(operator: address, strategy: IStrategy): uint256 &lt;&lt;IDelegationManager&gt;&gt;</text>
<text text-anchor="start" x="8" y="-798.3" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;&#160;stakerNonce(staker: address): uint256 &lt;&lt;IDelegationManager&gt;&gt;</text>
<text text-anchor="start" x="8" y="-781.5" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;&#160;delegationApproverSaltIsSpent(_delegationApprover: address, salt: bytes32): bool &lt;&lt;IDelegationManager&gt;&gt;</text>
<text text-anchor="start" x="8" y="-764.7" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;&#160;minWithdrawalDelayBlocks(): uint256 &lt;&lt;IDelegationManager&gt;&gt;</text>
<text text-anchor="start" x="8" y="-747.9" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;&#160;strategyWithdrawalDelayBlocks(strategy: IStrategy): uint256 &lt;&lt;IDelegationManager&gt;&gt;</text>
<text text-anchor="start" x="8" y="-731.1" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;&#160;DOMAIN_TYPEHASH(): bytes32 &lt;&lt;IDelegationManager&gt;&gt;</text>
<text text-anchor="start" x="8" y="-714.3" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;&#160;STAKER_DELEGATION_TYPEHASH(): bytes32 &lt;&lt;IDelegationManager&gt;&gt;</text>
<text text-anchor="start" x="8" y="-697.5" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;&#160;DELEGATION_APPROVAL_TYPEHASH(): bytes32 &lt;&lt;IDelegationManager&gt;&gt;</text>
<text text-anchor="start" x="8" y="-680.7" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;&#160;cumulativeWithdrawalsQueued(staker: address): uint256 &lt;&lt;IDelegationManager&gt;&gt;</text>
<text text-anchor="start" x="8" y="-663.9" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;pause(newPausedStatus: uint256) &lt;&lt;Pausable&gt;&gt;</text>
<text text-anchor="start" x="8" y="-647.1" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;pauseAll() &lt;&lt;Pausable&gt;&gt;</text>
<text text-anchor="start" x="8" y="-630.3" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;unpause(newPausedStatus: uint256) &lt;&lt;Pausable&gt;&gt;</text>
<text text-anchor="start" x="8" y="-613.5" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;setPauserRegistry(newPauserRegistry: IPauserRegistry) &lt;&lt;Pausable&gt;&gt;</text>
<text text-anchor="start" x="8" y="-596.7" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;registerAsOperator(registeringOperatorDetails: OperatorDetails, metadataURI: string) &lt;&lt;DelegationManager&gt;&gt;</text>
<text text-anchor="start" x="8" y="-579.9" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;modifyOperatorDetails(newOperatorDetails: OperatorDetails) &lt;&lt;DelegationManager&gt;&gt;</text>
<text text-anchor="start" x="8" y="-563.1" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;updateOperatorMetadataURI(metadataURI: string) &lt;&lt;DelegationManager&gt;&gt;</text>
<text text-anchor="start" x="8" y="-546.3" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;delegateTo(operator: address, approverSignatureAndExpiry: SignatureWithExpiry, approverSalt: bytes32) &lt;&lt;DelegationManager&gt;&gt;</text>
<text text-anchor="start" x="8" y="-529.5" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;delegateToBySignature(staker: address, operator: address, stakerSignatureAndExpiry: SignatureWithExpiry, approverSignatureAndExpiry: SignatureWithExpiry, approverSalt: bytes32) &lt;&lt;DelegationManager&gt;&gt;</text>
<text text-anchor="start" x="8" y="-512.7" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;undelegate(staker: address): (withdrawalRoots: bytes32[]) &lt;&lt;DelegationManager&gt;&gt;</text>
<text text-anchor="start" x="8" y="-495.9" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;queueWithdrawals(queuedWithdrawalParams: QueuedWithdrawalParams[]): bytes32[] &lt;&lt;DelegationManager&gt;&gt;</text>
<text text-anchor="start" x="8" y="-479.1" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;completeQueuedWithdrawal(withdrawal: Withdrawal, tokens: IERC20[], middlewareTimesIndex: uint256, receiveAsTokens: bool) &lt;&lt;DelegationManager&gt;&gt;</text>
<text text-anchor="start" x="8" y="-462.3" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;completeQueuedWithdrawals(withdrawals: Withdrawal[], tokens: IERC20[][], middlewareTimesIndexes: uint256[], receiveAsTokens: bool[]) &lt;&lt;DelegationManager&gt;&gt;</text>
<text text-anchor="start" x="8" y="-445.5" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;increaseDelegatedShares(staker: address, strategy: IStrategy, shares: uint256) &lt;&lt;DelegationManager&gt;&gt;</text>
<text text-anchor="start" x="8" y="-428.7" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;decreaseDelegatedShares(staker: address, strategy: IStrategy, shares: uint256) &lt;&lt;DelegationManager&gt;&gt;</text>
<text text-anchor="start" x="8" y="-411.9" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;operatorDetails(operator: address): OperatorDetails &lt;&lt;DelegationManager&gt;&gt;</text>
<text text-anchor="start" x="8" y="-395.1" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;earningsReceiver(operator: address): address &lt;&lt;DelegationManager&gt;&gt;</text>
<text text-anchor="start" x="8" y="-378.3" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;delegationApprover(operator: address): address &lt;&lt;DelegationManager&gt;&gt;</text>
<text text-anchor="start" x="8" y="-361.5" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;stakerOptOutWindowBlocks(operator: address): uint256 &lt;&lt;DelegationManager&gt;&gt;</text>
<text text-anchor="start" x="8" y="-344.7" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;calculateCurrentStakerDelegationDigestHash(staker: address, operator: address, expiry: uint256): bytes32 &lt;&lt;DelegationManager&gt;&gt;</text>
<text text-anchor="start" x="8" y="-327.9" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;migrateQueuedWithdrawals(withdrawalsToMigrate: IStrategyManager.DeprecatedStruct_QueuedWithdrawal[]) &lt;&lt;DelegationManager&gt;&gt;</text>
<text text-anchor="start" x="8" y="-311.1" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;initialize(initialOwner: address, _pauserRegistry: IPauserRegistry, initialPausedStatus: uint256, _minWithdrawalDelayBlocks: uint256, _strategies: IStrategy[], _withdrawalDelayBlocks: uint256[]) &lt;&lt;DelegationManager&gt;&gt;</text>
<text text-anchor="start" x="8" y="-294.3" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;setMinWithdrawalDelayBlocks(newMinWithdrawalDelayBlocks: uint256) &lt;&lt;DelegationManager&gt;&gt;</text>
<text text-anchor="start" x="8" y="-277.5" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;setStrategyWithdrawalDelayBlocks(strategies: IStrategy[], withdrawalDelayBlocks: uint256[]) &lt;&lt;DelegationManager&gt;&gt;</text>
<text text-anchor="start" x="8" y="-260.7" font-family="Times,serif" font-size="14.00">Public:</text>
<text text-anchor="start" x="8" y="-243.9" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;owner(): address &lt;&lt;OwnableUpgradeable&gt;&gt;</text>
<text text-anchor="start" x="8" y="-227.1" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;renounceOwnership() &lt;&lt;OwnableUpgradeable&gt;&gt;</text>
<text text-anchor="start" x="8" y="-210.3" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;transferOwnership(newOwner: address) &lt;&lt;OwnableUpgradeable&gt;&gt;</text>
<text text-anchor="start" x="8" y="-193.5" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;paused(): uint256 &lt;&lt;Pausable&gt;&gt;</text>
<text text-anchor="start" x="8" y="-176.7" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;paused(index: uint8): bool &lt;&lt;Pausable&gt;&gt;</text>
<text text-anchor="start" x="8" y="-159.9" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;getOperatorShares(operator: address, strategies: IStrategy[]): uint256[] &lt;&lt;DelegationManager&gt;&gt;</text>
<text text-anchor="start" x="8" y="-143.1" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;getWithdrawalDelay(strategies: IStrategy[]): uint256 &lt;&lt;DelegationManager&gt;&gt;</text>
<text text-anchor="start" x="8" y="-126.3" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;isDelegated(staker: address): bool &lt;&lt;DelegationManager&gt;&gt;</text>
<text text-anchor="start" x="8" y="-109.5" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;isOperator(operator: address): bool &lt;&lt;DelegationManager&gt;&gt;</text>
<text text-anchor="start" x="8" y="-92.7" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;calculateStakerDelegationDigestHash(staker: address, _stakerNonce: uint256, operator: address, expiry: uint256): bytes32 &lt;&lt;DelegationManager&gt;&gt;</text>
<text text-anchor="start" x="8" y="-75.9" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;calculateDelegationApprovalDigestHash(staker: address, operator: address, _delegationApprover: address, approverSalt: bytes32, expiry: uint256): bytes32 &lt;&lt;DelegationManager&gt;&gt;</text>
<text text-anchor="start" x="8" y="-59.1" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;domainSeparator(): bytes32 &lt;&lt;DelegationManager&gt;&gt;</text>
<text text-anchor="start" x="8" y="-42.3" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;calculateWithdrawalRoot(withdrawal: Withdrawal): bytes32 &lt;&lt;DelegationManager&gt;&gt;</text>
<text text-anchor="start" x="8" y="-25.5" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;constructor(_strategyManager: IStrategyManager, _slasher: ISlasher, _eigenPodManager: IEigenPodManager) &lt;&lt;DelegationManager&gt;&gt;</text>
<text text-anchor="start" x="8" y="-8.7" font-family="Times,serif" font-size="14.00"> &#160;&#160;&#160;getDelegatableShares(staker: address): (IStrategy[], uint256[]) &lt;&lt;DelegationManager&gt;&gt;</text>
</g>
</g>
</svg>
