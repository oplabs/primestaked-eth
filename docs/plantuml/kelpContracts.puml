@startuml

skinparam tabSize 2

title "Kelp Contract Dependencies"

object "Stakers" as staker <<account>> {
}

object "Manager" as man <<Kelp>> <<account>> {
}

object "rsETH" as rseth <<Kelp>> <<Proxy>> {
}

object "Deposit\nPool" as dep <<Kelp>> <<Proxy>> {
assets:
    \tETHx
    \tstETH
    \tsfrxETH
}

object "Node\nDelegator 1" as del1 <<Kelp>> <<Proxy>> {
    \tETHx
    \tstETH
    \tsfrxETH
}

object "Node\nDelegator 2" as del2 <<Kelp>> <<Proxy>> {
    \tETHx
    \tstETH
    \tsfrxETH
}

' object "Config" as config <<Kelp>> <<Proxy>> {
' }

object "Oracle" as oracle <<Kelp>> <<Proxy>> {
}

object "Strategy\nManager" as stratMan <<EigenLayer>> <<Proxy>> {
}

object "Strategy" as stratETHx <<EigenLayer>> <<Proxy>> {
asset: ETHx
}
object "Strategy" as stratLido <<EigenLayer>> <<Proxy>> {
asset: stETH
}
object "Strategy" as stratFrax <<EigenLayer>> <<Proxy>> {
asset: sfrxETH
}

object "Delegation\nManager" as delMan <<EigenLayer>> <<Proxy>> {
}
object "Slasher" as slasher <<EigenLayer>> <<Proxy>> {
}

object "Eigen\nPod Manager" as podMan <<EigenLayer>> <<Proxy>> {
}
object "Eigen\nPod 1" as pod1 <<EigenLayer>> <<Proxy>> {
}
object "Eigen\nPod 2" as pod2 <<EigenLayer>> <<Proxy>> {
}


staker ..> dep : depositAsset,\ndepositETH
man .> dep : transferAssetToNodeDelegator,\ntransferETHToNodeDelegator,\nswapAssetWithinDepositPool
dep .> rseth : mint

' config <. dep : depositLimitByAsset,\ngetContract,\nrsETH

dep ...> del1 : getAssetBalance,\ngetAssetBalances,\ngetETHEigenPodBalance,\nsendETHFromDepositPoolToNDC
dep ...> del2 : getAssetBalance,\ngetAssetBalances,\ngetETHEigenPodBalance,\nsendETHFromDepositPoolToNDC
dep ..> oracle : getAssetPrice

man ...> del1 : depositAssetIntoStrategy,\ntransferBackToLRTDepositPool,\ncreateEigenPod
man ...> del2 : depositAssetIntoStrategy,\ntransferBackToLRTDepositPool,\ncreateEigenPod

' config <.. del1 : getContract,\nassetStrategy
' config <.. del2 : getContract,\nassetStrategy

del1 ..> stratMan : depositIntoStrategy,\ngetDeposits
del2 ..> stratMan : depositIntoStrategy,\ngetDeposits
stratMan .> delMan : increaseDelegatedShares,\ndecreaseDelegatedShares
delMan ..> slasher

del1 ..> podMan : createPod,\nownerToPod
del2 ..> podMan : createPod,\nownerToPod
podMan ..> pod1
podMan ..> pod2

del1 ...> pod1 : verifyWithdrawalCredentialsAndBalance
del2 ...> pod2 : verifyWithdrawalCredentialsAndBalance

stratMan ..> stratETHx : deposit,\nwithdraw
stratMan ..> stratLido : deposit,\nwithdraw
stratMan ..> stratFrax : deposit,\nwithdraw

@enduml